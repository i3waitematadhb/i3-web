<?php

namespace {

    use SilverStripe\AssetAdmin\Forms\UploadField;
    use SilverStripe\Assets\Image;
    use SilverStripe\Forms\CheckboxField;
    use SilverStripe\Forms\DropdownField;
    use SilverStripe\Forms\HiddenField;
    use SilverStripe\Forms\HTMLEditor\HTMLEditorField;
    use SilverStripe\Forms\ReadonlyField;
    use SilverStripe\Forms\TextField;
    use SilverStripe\ORM\DataObject;

    class SliderItems extends DataObject
    {
        private static $default_sort = 'Sort';

        private static $db = [
            'Name'     => 'Varchar',
            'Content'  => 'HTMLText',
            'ContentPosition' => 'Varchar',
            'ImageOverlay'    => 'Varchar',
            'Archived' => 'Boolean',
            'Sort'     => 'Int'
        ];

        private static $has_one = [
            'Parent'      => SliderBanner::class,
            'SliderImage' => Image::class
        ];

        private static $owns = [
            'SliderImage'
        ];

        private static $summary_fields = [
            'Name',
            'Content.Summary' => 'Content Summary',
            'SliderImage.CMSThumbnail' => 'Slider image',
            'Status'
        ];

        public function getCMSFields()
        {
            $fields = parent::getCMSFields(); // TODO: Change the autogenerated stub
            $fields->removeByName('ParentID');
            $fields->addFieldToTab('Root.Main', ReadonlyField::create('ParentRO', 'Parent', $this->Parent()->Title));
            $fields->addFieldToTab('Root.Main', TextField::create('Name'));
            $fields->addFieldToTab('Root.Main', UploadField::create('SliderImage')
                ->setFolderName('Sections/Section_SliderBanner/Images'));
            $fields->addFieldToTab('Root.Main', DropdownField::create('ImageOverlay', 'Add image overlay',
                array(
                    'none' => 'None',
                    'dark' => 'Dark',
                    'light'=> 'Light'
                )
            ));
            $fields->addFieldToTab('Root.Main', HTMLEditorField::create('Content'));
            $fields->addFieldToTab('Root.Main', DropdownField::create('ContentPosition', 'Content position',
                array(
                    'left'  => 'Left',
                    'center'=> 'Center',
                    'right' => 'Right'
                )
            ));
            $fields->addFieldToTab('Root.Main', CheckboxField::create('Archived'));
            $fields->addFieldToTab('Root.Main', HiddenField::create('Sort'));
            return $fields;
        }

        public function getStatus()
        {
            if($this->Archived == 1) return _t('GridField.Archived', 'Archived');
            return _t('GridField.Live', 'Live');
        }
    }
}
