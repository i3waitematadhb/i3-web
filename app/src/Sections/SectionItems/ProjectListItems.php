<?php

namespace {

    use SilverStripe\CMS\Model\SiteTree;
    use SilverStripe\Forms\CheckboxField;
    use SilverStripe\Forms\DropdownField;
    use SilverStripe\Forms\HiddenField;
    use SilverStripe\Forms\ReadonlyField;
    use SilverStripe\ORM\DataObject;

    class ProjectListItems extends DataObject
    {
        private static $default_sort = 'Sort ASC';

        private static $db = [
            'Name'      => 'Varchar',
            'Animation' => 'Text',
            'Archived'  => 'Boolean',
            'Sort'      => 'Int'
        ];

        private static $has_one = [
            'Parent'         => ProjectList::class,
            'CollectionPage' => SiteTree::class
        ];

        private static $summary_fields = [
            'Name',
            'Animation',
            'Status'
        ];

        public function getCMSFields()
        {
            $fields = parent::getCMSFields(); // TODO: Change the autogenerated stub
            $fields->removeByName('ParentID');
            $fields->addFieldToTab('Root.Main', ReadonlyField::create('ParentRO', 'Parent', $this->Parent()->Title));

            $fields->addFieldToTab('Root.Main', ReadonlyField::create('Name'));
            $fields->addFieldToTab('Root.Main', DropdownField::create('CollectionPageID', 'Project page link',
                ProjectPage::get()->filter('ClassName', 'ProjectPage')->map('ID', 'Title'))->setEmptyString('(Select one)'));
            $fields->addFieldToTab('Root.Main', DropdownField::create('Animation', 'Select item animation',
                Animation::get()->filter('Archived', false)->map('Name', 'Name')));
            $fields->addFieldToTab('Root.Main', CheckboxField::create('Archived'));
            $fields->addFieldToTab('Root.Main', HiddenField::create('Sort'));

            return $fields;
        }

        public function getStatus()
        {
            if($this->Archived == 1) return _t('GridField.Archived', 'Archived');
            return _t('GridField.Live', 'Live');
        }

        public function onBeforeWrite()
        {
            parent::onBeforeWrite();
            if($this->Name == ''){
                $this->Name = $this->CollectionPage->Title;
            }
        }
    }
}
