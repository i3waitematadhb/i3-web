<?php

namespace {

    use SilverStripe\Forms\GridField\GridField;
    use SilverStripe\Forms\GridField\GridFieldConfig_RecordEditor;
    use SilverStripe\Forms\TextareaField;
    use SilverStripe\ORM\ArrayList;
    use SilverStripe\View\ArrayData;

    class QISessionHolderPage extends Page
    {
        private static $icon_class = 'font-icon-list';

        private static $default_child = QISessionPage::class;

        private static $allowed_children = [
            QISessionPage::class
        ];

        private static $db = [
            'FilterYear' => 'Text'
        ];

        public function getCMSFields()
        {
            $fields = parent::getCMSFields(); // TODO: Change the autogenerated stub

            $fields->addFieldToTab('Root.Main', TextareaField::create('FilterYear', 'Year filter')
                ->setDescription('Add comma in each year for separation (E.g. 2017,2018)'), 'Sections');
            /**
             * QI Project Categories
             */
            $config = GridFieldConfig_RecordEditor::create('999');
            $editor = GridField::create('QISessionCategory', 'Session categories', QISessionCategory::get(), $config);
            $fields->addFieldToTab('Root.SessionCategories', $editor);

            /**
             * QI Project SubCategories
             */
            $configSubcat = GridFieldConfig_RecordEditor::create('999');
            $editorSubcat = GridField::create('QISessionSubCategory', 'Session subcategories', QISessionSubCategory::get(), $configSubcat);
            $fields->addFieldToTab('Root.SessionSubcategories', $editorSubcat);

            return $fields;
        }

        public function getAllYears()
        {
            $yearLists =  $this->FilterYear;
            $years    = explode(",",$yearLists);

            $output = new ArrayList();
            foreach($years as $item) {
                $output->push(
                    new ArrayData(array('name' => $item))
                );
            }
            return $output;
        }

        public function getVisibleQISessionCategories()
        {
            return QISessionCategory::get()->filter('Archived', false)->sort('Sort');
        }

        public function getVisibleQISessionSubCategories()
        {
            return QISessionSubCategory::get()->filter('Archived', false)->sort('Sort');
        }
    }
}
