<?php

namespace {

    use SilverStripe\Forms\GridField\GridField;
    use SilverStripe\Forms\GridField\GridFieldConfig_RecordEditor;
    use SilverStripe\Forms\TextareaField;
    use SilverStripe\ORM\ArrayList;
    use SilverStripe\View\ArrayData;
    use TractorCow\SliderField\SliderField;

    class ProjectHolderPage extends Page
    {
        private static $icon_class = 'font-icon-folder-add';

        private static $default_child = ProjectPage::class;

        private static $allowed_children = [
            ProjectPage::class
        ];

        private static $db = [
            'FilterYear'    => 'Text',
            'LimitProjects' => 'Int'
        ];

        public function getCMSFields()
        {
            $fields = parent::getCMSFields(); // TODO: Change the autogenerated stub
            $fields->addFieldToTab('Root.Main', SliderField::create('LimitProjects', 'Limit number of pages to show', 3, 100), 'Sections');
            $fields->addFieldToTab('Root.Main', TextareaField::create('FilterYear', 'Year filter')
                ->setDescription('Add comma in each year for separation (E.g. 2017,2018)'), 'Sections');
            /**
             * Project Categories
             */
            $config = GridFieldConfig_RecordEditor::create('999');
            $editor = GridField::create('ProjectCategory', 'Project categories', ProjectCategory::get(), $config);
            $fields->addFieldToTab('Root.ProjectCategories', $editor);

            return $fields;
        }

        public function getAllYears()
        {
            $yearLists =  $this->FilterYear;
            $years    = explode(",",$yearLists);

            $output = new ArrayList();
            foreach($years as $item) {
                $output->push(
                    new ArrayData(array('name' => $item))
                );
            }
            return $output;
        }

        public function getVisibleProjectCategories()
        {
            return ProjectCategory::get()->filter('Archived', false)->sort('Sort');
        }
    }
}
